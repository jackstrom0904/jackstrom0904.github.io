<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>https://jackstrom0904.github.io</id>
    <title>Error404</title>
    <updated>2020-03-01T10:48:30.368Z</updated>
    <generator>https://github.com/jpmonette/feed</generator>
    <link rel="alternate" href="https://jackstrom0904.github.io"/>
    <link rel="self" href="https://jackstrom0904.github.io/atom.xml"/>
    <subtitle>总笑它人傻、到了最后才发现自己才是名副其实的傻子</subtitle>
    <logo>https://jackstrom0904.github.io/images/avatar.png</logo>
    <icon>https://jackstrom0904.github.io/favicon.ico</icon>
    <rights>All rights reserved 2020, Error404</rights>
    <entry>
        <title type="html"><![CDATA[资产收集之GoBy]]></title>
        <id>https://jackstrom0904.github.io/JwBsDK_57</id>
        <link href="https://jackstrom0904.github.io/JwBsDK_57">
        </link>
        <updated>2020-03-01T08:40:26.000Z</updated>
        <content type="html"><![CDATA[<p>0x01主界面<br>
<img src="https://jackstrom0904.github.io/post-images/1583052183916.png" alt="" loading="lazy"><br>
0x02其他功能<br>
<img src="https://jackstrom0904.github.io/post-images/1583052189870.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[DLL劫持检测工具]]></title>
        <id>https://jackstrom0904.github.io/xcvq_tqj9</id>
        <link href="https://jackstrom0904.github.io/xcvq_tqj9">
        </link>
        <updated>2020-03-01T06:46:33.000Z</updated>
        <content type="html"><![CDATA[<p>工具地址：https://github.com/MojtabaTajik/Robbe<br>
<img src="https://jackstrom0904.github.io/post-images/1583045324636.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Linux-figlet]]></title>
        <id>https://jackstrom0904.github.io/Lhp38_H8e</id>
        <link href="https://jackstrom0904.github.io/Lhp38_H8e">
        </link>
        <updated>2020-03-01T02:58:35.000Z</updated>
        <content type="html"><![CDATA[<p>1.下载<br>
[root@bogon ~]# wget ftp://ftp.figlet.org/pub/figlet/program/unix/figlet-2.2.5.tar.gz<br>
2.安装<br>
[root@bogon ~]# tar zxvf figlet-2.2.5.tar.gz<br>
[root@bogon ~]# cd figlet-2.2.5/<br>
[root@bogon ~]# make &amp;&amp; make install<br>
3.使用<br>
[root@bogon ~]# figlet Jsnoort<br>
_                            _<br>
| |___ _ __   ___   ___  _ <em><em>| |</em><br>
_  | / <em><em>| '</em> \ / _ \ / _ | '</em></em>| <em><em>|<br>
| |<em>| _</em> \ | | | (<em>) | (</em>) | |  | |</em><br>
_</em><em>/|</em><em><em>/</em>| |</em>|_<strong>/ _</strong>/|<em>|   _</em>|</p>
<p>[root@bogon ~]# showfigfonts # 查看系统可用的字体</p>
<p>big :<br>
_     _<br>
| |   (<em>)<br>
| |__  _  __ _<br>
| '</em> | |/ <em>` |<br>
| |</em>) | | (<em>| |<br>
|</em>._<em>/|<em>|_</em>, |<br>
<strong>/ |<br>
|</strong></em>/<br>
[root@bogon ~]# figlet -f bubble CVE-2020-0000  #-f 指定字体</p>
<hr>
<p>/ \ / \ / \ / \ / \ / \ / \ / \ / \ / \ / \ / \ / \<br>
( C | V | E | - | 2 | 0 | 2 | 0 | - | 0 | 0 | 0 | 0 )<br>
_/ _/ _/ _/ _/ _/ _/ _/ _/ _/ _/ _/ _/</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[VIM插件-Pydiction]]></title>
        <id>https://jackstrom0904.github.io/uneFiWtvX</id>
        <link href="https://jackstrom0904.github.io/uneFiWtvX">
        </link>
        <updated>2020-02-28T03:27:02.000Z</updated>
        <content type="html"><![CDATA[<p>0x01 下载<br>
[root@bogon ~]# git clone https://github.com/rkulla/pydiction.git<br>
[root@bogon ~]# mkdir ~/.vim<br>
[root@bogon ~]# mkidr ~/.vim/tools<br>
0x02 配置<br>
[root@bogon ~]# cp -r ~/.vim/tools/pydiction/after/ ~/.vim<br>
0x03 编辑.vimrc配置文件<br>
[root@bogon ~]# vim ~/.vimrc<br>
set nocompatible &quot; be iMproved, required<br>
filetype off &quot; required<br>
set rtp+=~/.vim/bundle/Vundle.vim<br>
call vundle#begin()<br>
Plugin 'VundleVim/Vundle.vim'<br>
call vundle#end()<br>
filetype plugin on<br>
let g:pydiction_location = '/root/tools/pydiction/complete-dict'<br>
let g:pydiction_menu_height = 5<br>
set nocompatible &quot;关闭与vi的兼容模式<br>
set number &quot;显示行号<br>
set nowrap    &quot;不自动折行<br>
set showmatch    &quot;显示匹配的括号<br>
set scrolloff=3        &quot;距离顶部和底部3行&quot;<br>
set encoding=utf-8  &quot;编码<br>
set fenc=utf-8      &quot;编码<br>
set mouse=a        &quot;启用鼠标<br>
set hlsearch        &quot;搜索高亮<br>
syntax on    &quot;语法高亮<br>
set tabstop=4   &quot;tab宽度<br>
set softtabstop=4<br>
set shiftwidth=4<br>
set textwidth=79  &quot;行最大宽度<br>
set expandtab       &quot;tab替换为空格键<br>
set autoindent      &quot;自动缩进<br>
set fileformat=unix   &quot;保存文件格式</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Centos7.5 安装python3.8]]></title>
        <id>https://jackstrom0904.github.io/8DaMWbtjF</id>
        <link href="https://jackstrom0904.github.io/8DaMWbtjF">
        </link>
        <updated>2020-02-27T02:25:22.000Z</updated>
        <content type="html"><![CDATA[<p>#下载<br>
[root@bogon home]# wget https://www.python.org/ftp/python/3.8.2/Python-3.8.2.tgz #<br>
#安装依赖<br>
[root@bogon ~]# yum install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel libffi-devel gcc* make -y  # yum-builddep 命令 设置 python 编译环境，下载缺少的依赖 此处必须执行、不然编译会报错<br>
[root@bogon home]# yum-builddep python<br>
#源代码进行解压并编译安装<br>
[root@bogon home]#  ./configure<br>
[root@bogon home]#  make &amp;&amp; make install<br>
#安装成功<br>
[root@bogon Python-3.8.2]# python3 -V<br>
Python 3.8.2</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Github Monitor 源代码安装过程]]></title>
        <id>https://jackstrom0904.github.io/nEacND9Ee</id>
        <link href="https://jackstrom0904.github.io/nEacND9Ee">
        </link>
        <updated>2020-02-25T00:25:27.000Z</updated>
        <summary type="html"><![CDATA[<p>0x01    简介<br>
GITHUB MONITOR 是vipkid安全研发团队打造的用于监控Github代码仓库的系统。通过该系统可以及时发现企业内部代码泄露、从而降低由于代码泄露导致的一系列安全风险。用户仅需通过简单的任务配置，即可在分钟级发现代码泄露的情况。项目后端使用 django-rest-framework 开发，前端使用 react 和 antd-pro 开发。<br>
项目地址：https://github.com/VKSRC/Github-Monitor.git<br>
0x02 mysql安装<br>
root@bt:~# apt-get install mysql-server -y #安装服务端<br>
root@bt:~# apt install mysql-client -y #安装客户端<br>
root@bt:~# apt install libmysqlclient-dev #安装依赖库<br>
root@bt:~# mysql<br>
mysql&gt; update mysql.user set authentication_string=PASSWORD('123456'), plugin='mysql_native_password' where user='root'; ##设置数据库密码<br>
mysql&gt; flush privileges; #设置的密码生效<br>
mysql&gt; CREATE DATABASE IF NOT EXISTS github DEFAULT CHARSET utf8mb4 COLLATE utf8mb4_bin; #创建项目所需的库<br>
mysql&gt; exit #退出<br>
root@bt:~#/etc/init.d/mysql restart #重新启动mysql<br>
0x03 redis 安装<br>
root@bt:~#apt-get install redis-server -y #安装redis<br>
root@bt:~# /etc/init.d/redis-server  [restart|start|stop]<br>
root@bt:~#redis-cli  #客户端<br>
0x04 项目部署过程<br>
root@bt:~#git clone https://github.com/VKSRC/Github-Monitor.git #下载项目<br>
root@bt:~#cd Github-Monitor #进入目录<br>
root@bt:~# cp .env.sample .env #配置文件<br>
root@bt:~# vim .env #编辑配置文件</p>
<h1 id="django-settings">Django Settings</h1>
<p>DEBUG=&quot;True&quot;  # Django后台是否以debug模式运行, 可选True/False<br>
ALLOWED_HOSTS=&quot;*,127.0.0.1,localhost&quot;  # 配置Django Allowed_Hosts, 如果DEBUG为False, 需要将访问的host地址添加进来，如'localhost,github.vipkid.com.cn'</p>
<h1 id="database-settings">Database Settings</h1>
<h1 id="database-choice-is-mysql-or-sqlite">DATABASE choice is mysql or sqlite</h1>
<p>DATABASE=&quot;mysql&quot;  # 数据库类型, 可选sqlite或mysql<br>
DB_NAME=&quot;github&quot;  # 数据库名称<br>
DB_HOST=&quot;127.0.0.1&quot;  # mysql host<br>
DB_PORT=&quot;3306&quot;  # mysql port<br>
DB_USER=&quot;root&quot;  # mysql用户名<br>
DB_PASSWORD=&quot;123456&quot;  # mysql密码</p>
<h1 id="redis-settings">Redis Settings</h1>
<p>REDIS_HOST=&quot;127.0.0.1&quot;  # redis host<br>
REDIS_PORT=&quot;6379&quot;  # redis port<br>
REDIS_PASSWORD=&quot;&quot;  # redis password</p>
<h1 id="email-settings">Email Settings</h1>
<h1 id="if-you-do-not-fill-it-in-it-is-nonefalse">If you do not fill it in, it is None/False</h1>
<p>EMAIL_HOST=&quot;smtp.example.com&quot;  # smtp host<br>
EMAIL_PORT=&quot;25&quot;  # smtp port<br>
FROM_EMAIL=&quot;secuirty@example.com&quot;  # 发件人<br>
EMAIL_HOST_USER=&quot;security@example.com&quot;  # email user, 如为匿名发送，将值设为空字符即可<br>
EMAIL_HOST_PASSWORD=&quot;password123!@#&quot;  # email password, 如为匿名发送，将值设为空字符即可<br>
EMAIL_USE_TLS=&quot;False&quot;  # 与SMTP服务器通信时是否使用TLS（安全）连接, 可选True/False<br>
EMAIL_USE_SSL=&quot;False&quot;  # 与SMTP服务器通信时是否使用SSL（安全）连接, 可选True/False</p>
<h1 id="initial-administrator">initial Administrator</h1>
<p>INIT_ADMIN_USERNAME=&quot;admin&quot;  # 初始化系统用户使用的用户名<br>
INIT_ADMIN_PASSWORD=&quot;password123!@#&quot;  # 初始化系统用户使用的用户密码<br>
0x05 安装项目依赖及初始化数据库<br>
root@bt:~#cd server<br>
root@bt:~#pip3 install -r requirements.pip -i http://pypi.doubanio.com/simple --trusted-host pypi.doubanio.com #安装python依赖<br>
PS:此处有坑安装失败检查python版本<br>
root@bt:~#python3 manage.py migrate #初始化数据库<br>
root@bt:~#python3 manage.py init_admin #初始化用户<br>
root@bt:~#python3 manage.py runserver 0.0.0.0:8001 #启动web后端服务<br>
root@bt:~#python3 manage.py monitor_task_service #启动监控任务服务<br>
0x06 nodejs环境安装<br>
root@bt:~ tar -xvf node-v12.16.1-linux-x64.tar.xz #解压<br>
root@bt:/opt# vim /etc/profile<br>
写入到尾部<br>
export PATH=/opt/node/bin/:$PATH<br>
root@bt:/opt# source /etc/profile #环境变量生效<br>
root@bt:/opt# npm -v<br>
6.13.4<br>
root@bt:/opt# node -v<br>
v12.16.1<br>
#npm建议安装官方最新、低版本构建项目时各种报错<br>
0x07 前端代码部署<br>
root@bt:# cd client #进入项目根目录下的client目录<br>
root@bt:#cat client /config/config.local.js #如果后端接口地址不为 127.0.0.1:8001在该配置文件中进行修改<br>
root@bt:# npm install &amp;&amp; npm run start<br>
0x08 部署完成</p>
]]></summary>
        <content type="html"><![CDATA[<p>0x01    简介<br>
GITHUB MONITOR 是vipkid安全研发团队打造的用于监控Github代码仓库的系统。通过该系统可以及时发现企业内部代码泄露、从而降低由于代码泄露导致的一系列安全风险。用户仅需通过简单的任务配置，即可在分钟级发现代码泄露的情况。项目后端使用 django-rest-framework 开发，前端使用 react 和 antd-pro 开发。<br>
项目地址：https://github.com/VKSRC/Github-Monitor.git<br>
0x02 mysql安装<br>
root@bt:~# apt-get install mysql-server -y #安装服务端<br>
root@bt:~# apt install mysql-client -y #安装客户端<br>
root@bt:~# apt install libmysqlclient-dev #安装依赖库<br>
root@bt:~# mysql<br>
mysql&gt; update mysql.user set authentication_string=PASSWORD('123456'), plugin='mysql_native_password' where user='root'; ##设置数据库密码<br>
mysql&gt; flush privileges; #设置的密码生效<br>
mysql&gt; CREATE DATABASE IF NOT EXISTS github DEFAULT CHARSET utf8mb4 COLLATE utf8mb4_bin; #创建项目所需的库<br>
mysql&gt; exit #退出<br>
root@bt:~#/etc/init.d/mysql restart #重新启动mysql<br>
0x03 redis 安装<br>
root@bt:~#apt-get install redis-server -y #安装redis<br>
root@bt:~# /etc/init.d/redis-server  [restart|start|stop]<br>
root@bt:~#redis-cli  #客户端<br>
0x04 项目部署过程<br>
root@bt:~#git clone https://github.com/VKSRC/Github-Monitor.git #下载项目<br>
root@bt:~#cd Github-Monitor #进入目录<br>
root@bt:~# cp .env.sample .env #配置文件<br>
root@bt:~# vim .env #编辑配置文件</p>
<h1 id="django-settings">Django Settings</h1>
<p>DEBUG=&quot;True&quot;  # Django后台是否以debug模式运行, 可选True/False<br>
ALLOWED_HOSTS=&quot;*,127.0.0.1,localhost&quot;  # 配置Django Allowed_Hosts, 如果DEBUG为False, 需要将访问的host地址添加进来，如'localhost,github.vipkid.com.cn'</p>
<h1 id="database-settings">Database Settings</h1>
<h1 id="database-choice-is-mysql-or-sqlite">DATABASE choice is mysql or sqlite</h1>
<p>DATABASE=&quot;mysql&quot;  # 数据库类型, 可选sqlite或mysql<br>
DB_NAME=&quot;github&quot;  # 数据库名称<br>
DB_HOST=&quot;127.0.0.1&quot;  # mysql host<br>
DB_PORT=&quot;3306&quot;  # mysql port<br>
DB_USER=&quot;root&quot;  # mysql用户名<br>
DB_PASSWORD=&quot;123456&quot;  # mysql密码</p>
<h1 id="redis-settings">Redis Settings</h1>
<p>REDIS_HOST=&quot;127.0.0.1&quot;  # redis host<br>
REDIS_PORT=&quot;6379&quot;  # redis port<br>
REDIS_PASSWORD=&quot;&quot;  # redis password</p>
<h1 id="email-settings">Email Settings</h1>
<h1 id="if-you-do-not-fill-it-in-it-is-nonefalse">If you do not fill it in, it is None/False</h1>
<p>EMAIL_HOST=&quot;smtp.example.com&quot;  # smtp host<br>
EMAIL_PORT=&quot;25&quot;  # smtp port<br>
FROM_EMAIL=&quot;secuirty@example.com&quot;  # 发件人<br>
EMAIL_HOST_USER=&quot;security@example.com&quot;  # email user, 如为匿名发送，将值设为空字符即可<br>
EMAIL_HOST_PASSWORD=&quot;password123!@#&quot;  # email password, 如为匿名发送，将值设为空字符即可<br>
EMAIL_USE_TLS=&quot;False&quot;  # 与SMTP服务器通信时是否使用TLS（安全）连接, 可选True/False<br>
EMAIL_USE_SSL=&quot;False&quot;  # 与SMTP服务器通信时是否使用SSL（安全）连接, 可选True/False</p>
<h1 id="initial-administrator">initial Administrator</h1>
<p>INIT_ADMIN_USERNAME=&quot;admin&quot;  # 初始化系统用户使用的用户名<br>
INIT_ADMIN_PASSWORD=&quot;password123!@#&quot;  # 初始化系统用户使用的用户密码<br>
0x05 安装项目依赖及初始化数据库<br>
root@bt:~#cd server<br>
root@bt:~#pip3 install -r requirements.pip -i http://pypi.doubanio.com/simple --trusted-host pypi.doubanio.com #安装python依赖<br>
PS:此处有坑安装失败检查python版本<br>
root@bt:~#python3 manage.py migrate #初始化数据库<br>
root@bt:~#python3 manage.py init_admin #初始化用户<br>
root@bt:~#python3 manage.py runserver 0.0.0.0:8001 #启动web后端服务<br>
root@bt:~#python3 manage.py monitor_task_service #启动监控任务服务<br>
0x06 nodejs环境安装<br>
root@bt:~ tar -xvf node-v12.16.1-linux-x64.tar.xz #解压<br>
root@bt:/opt# vim /etc/profile<br>
写入到尾部<br>
export PATH=/opt/node/bin/:$PATH<br>
root@bt:/opt# source /etc/profile #环境变量生效<br>
root@bt:/opt# npm -v<br>
6.13.4<br>
root@bt:/opt# node -v<br>
v12.16.1<br>
#npm建议安装官方最新、低版本构建项目时各种报错<br>
0x07 前端代码部署<br>
root@bt:# cd client #进入项目根目录下的client目录<br>
root@bt:#cat client /config/config.local.js #如果后端接口地址不为 127.0.0.1:8001在该配置文件中进行修改<br>
root@bt:# npm install &amp;&amp; npm run start<br>
0x08 部署完成</p>
<!-- more -->
<figure data-type="image" tabindex="1"><img src="https://jackstrom0904.github.io/post-images/1582593041920.png" alt="" loading="lazy"></figure>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[cetos7安装JAVA开发环境]]></title>
        <id>https://jackstrom0904.github.io/hly_MxoM5</id>
        <link href="https://jackstrom0904.github.io/hly_MxoM5">
        </link>
        <updated>2020-02-22T01:33:15.000Z</updated>
        <content type="html"><![CDATA[<p>0X01 java安装过程<br>
[root@bt java]# ls -l  #oracle官网已完成下载Jdk<br>
-rw-r--r--. 1 root root 194545143 2月  22 09:24 jdk-8u241-linux-x64.tar.gz<br>
[root@bt java]# tar zxvf jdk-8u241-linux-x64.tar.gz  #进行解压<br>
[root@bt jdk1.8.0_241]# pwd #压缩包解压路径<br>
/opt/java/jdk1.8.0_241<br>
[root@bt jdk1.8.0_241]# vim /etc/profile #配置环境变量<br>
#文件末尾追加<br>
export JAVA_HOME=/opt/java/jdk1.8.0_241<br>
export JRE_HOME=<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi>J</mi><mi>A</mi><mi>V</mi><msub><mi>A</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi></mrow><mi mathvariant="normal">/</mi><mi>j</mi><mi>r</mi><mi>e</mi><mi>e</mi><mi>x</mi><mi>p</mi><mi>o</mi><mi>r</mi><mi>t</mi><mi>C</mi><mi>L</mi><mi>A</mi><mi>S</mi><mi>S</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>=</mo><mi mathvariant="normal">.</mi><mo>:</mo></mrow><annotation encoding="application/x-tex">{JAVA_HOME}/jre
export CLASSPATH=.:</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span><span class="mord"><span class="mord mathdefault">A</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.05724em;">j</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">e</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="mord mathdefault">L</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord">.</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">:</span></span></span></span>{JAVA_HOME}/lib:<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mrow><mi>J</mi><mi>R</mi><msub><mi>E</mi><mi>H</mi></msub><mi>O</mi><mi>M</mi><mi>E</mi></mrow><mi mathvariant="normal">/</mi><mi>l</mi><mi>i</mi><mi>b</mi><mi>e</mi><mi>x</mi><mi>p</mi><mi>o</mi><mi>r</mi><mi>t</mi><mi>P</mi><mi>A</mi><mi>T</mi><mi>H</mi><mo>=</mo></mrow><annotation encoding="application/x-tex">{JRE_HOME}/lib
export PATH=</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.09618em;">J</span><span class="mord mathdefault" style="margin-right:0.00773em;">R</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="mord mathdefault" style="margin-right:0.05764em;">E</span></span><span class="mord">/</span><span class="mord mathdefault" style="margin-right:0.01968em;">l</span><span class="mord mathdefault">i</span><span class="mord mathdefault">b</span><span class="mord mathdefault">e</span><span class="mord mathdefault">x</span><span class="mord mathdefault">p</span><span class="mord mathdefault">o</span><span class="mord mathdefault" style="margin-right:0.02778em;">r</span><span class="mord mathdefault">t</span><span class="mord mathdefault" style="margin-right:0.13889em;">P</span><span class="mord mathdefault">A</span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mord mathdefault" style="margin-right:0.08125em;">H</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span>{JAVA_HOME}/bin:<span class='katex-error' title='ParseError: KaTeX parse error: Expected &#039;EOF&#039;, got &#039;#&#039; at position 28: …t jdk1.8.0_241]#̲ source /etc/pr…'>PATH
[root@bt jdk1.8.0_241]# source /etc/profile #环境变量生效
[root@bt jdk1.8.0_241]# java -version #验证是否安装成功
java version &quot;1.8.0_241&quot;
Java(TM) SE Runtime Environment (build 1.8.0_241-b07)
Java HotSpot(TM) 64-Bit Server VM (build 25.241-b07, mixed mode)
0X01 Maven安装过程
[root@bt opt]# wget https://archive.apache.org/dist/maven/maven-3/3.5.0/binaries/apache-maven-3.5.0-bin.tar.gz #下载安装包
[root@bt maven]# tar zxvf apache-maven-3.5.0-bin.tar.gz  #解压
[root@bt maven]# mv apache-maven-3.5.0 maven #重命名
[root@bt maven]# pwd #路径信息
/opt/maven/maven
[root@bt maven]# vim /etc/profile
export PATH=/opt/maven/maven/bin:</span>PATH<br>
[root@bt jdk1.8.0_241]# source /etc/profile #环境变量生效<br>
[root@bt bin]# mvn  -v #安装成功<br>
Apache Maven 3.5.0 (ff8f5e7444045639af65f6095c62210b5713f426; 2017-04-04T03:39:06+08:00)<br>
Maven home: /opt/maven/maven<br>
Java version: 1.8.0_241, vendor: Oracle Corporation<br>
Java home: /opt/java/jdk1.8.0_241/jre<br>
Default locale: zh_CN, platform encoding: UTF-8<br>
OS name: &quot;linux&quot;, version: &quot;3.10.0-862.el7.x86_64&quot;, arch: &quot;amd64&quot;, family: &quot;unix&quot;</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[Cenos7.3--Beef安装过程]]></title>
        <id>https://jackstrom0904.github.io/DDddP9tC2</id>
        <link href="https://jackstrom0904.github.io/DDddP9tC2">
        </link>
        <updated>2020-02-05T04:32:07.000Z</updated>
        <content type="html"><![CDATA[<p>0x01 环境说明<br>
说明：此文章没有多的文字描述、只是利用Histroy记录进行还原。<br>
Linux-cetos7.3[国外VPS]<br>
[root@localhost beef]# cat /etc/redhat-release<br>
CentOS Linux release 7.3.1611 (Core)<br>
0x02 安装过程记录<br>
安装ruby：beef环境要求ruby&gt;2.5<br>
[root@bt /]# yum install -y gcc*<br>
[root@bt /]# wget https://cache.ruby-lang.org/pub/ruby/2.5/ruby-2.5.7.tar.gz<br>
[root@bt /]# tar zxvf ruby-2.5.7.tar.gz<br>
[root@bt /]#  cd ruby-2.5.7<br>
[root@bt /]# ./configure<br>
[root@bt /]# make &amp;&amp; make install<br>
[root@bt /]# vim /etc/profile  #将ruby加入到环境变量<br>
[root@bt /]# source /etc/profile<br>
[root@bt /]#ruby -v #出现版本号代表安装成功<br>
安装beef<br>
[root@bt /]git clone https://github.com/beefproject/beef.git<br>
[root@bt /]cd beef<br>
[root@bt /]./install #ruby满足要求后程序将自动安装<br>
[root@bt /]./beef #第一次程序启动<br>
<img src="https://jackstrom0904.github.io/post-images/1580878207374.png" alt="" loading="lazy"><br>
#根据报错提示为安装nodejs<br>
[root@bt /] wget  https://npm.taobao.org/mirrors/node/v10.15.3/node-v10.15.3-linux-x64.tar.gz<br>
[root@bt /] tar zxvf node-v10.15.3-linux-x64.tar.gz<br>
[root@bt /] mv node-v10.15.3-linux-x64 nodejs<br>
[root@bt /]vim /etc/profile 将nodejs-bin加入到环境变量<br>
[root@bt /]source /etc/profile<br>
[root@bt /]note -v<br>
[root@bt /]./beef #第二次程序启动<br>
<img src="https://jackstrom0904.github.io/post-images/1580878522892.png" alt="" loading="lazy"><br>
#按照报错提示对默认的用户名密码进行修改<br>
[root@bt /]vim config.yaml<br>
[root@bt /]./beef #第三次程序启动<br>
<img src="https://jackstrom0904.github.io/post-images/1580878646268.jpg" alt="" loading="lazy"><br>
#按照报错提示SQLite版本不符合<br>
[root@bt /]wget http://www.sqlite.org/2015/sqlite-autoconf-3081101.tar.gz<br>
[root@bt /]tar zxvf sqlite-autoconf-3081101.tar.gz<br>
[root@bt /]cd sqlite-autoconf-3081101<br>
[root@bt /] ./configure<br>
[root@bt /]make &amp;&amp; make install<br>
[root@bt /] ldconfig<br>
[root@bt /] sqlite3 #可看到版本号相关<br>
[root@bt /]./beef #最后一次成功启动<br>
0x02 安装完成<br>
<img src="https://jackstrom0904.github.io/post-images/1580879405849.png" alt="" loading="lazy"><br>
#狗头伟等哥去北京的、抽死你....</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[IISPUT上传漏洞]]></title>
        <id>https://jackstrom0904.github.io/MA8A5SdC7</id>
        <link href="https://jackstrom0904.github.io/MA8A5SdC7">
        </link>
        <updated>2020-01-31T03:50:46.000Z</updated>
        <content type="html"><![CDATA[<p>0x01 漏洞原理<br>
WebDAV （Web-based Distributed Authoring and Versioning） 是一种HTTP1.1的扩展协议。它扩展了HTTP 1.1，在GET、POST、HEAD等几个HTTP标准方法以外添加了一些新的方法，使应用程序可对Web Server直接读写，并支持写文件锁定(Locking)及解锁(Unlock)，还可以支持文件的版本控制。可以像在操作本地文件夹一样操作服务器上的文件夹，该扩展也存在缺陷，可以被恶意攻击者利用，直接上传恶意文件。<br>
0x02 漏洞利用<br>
<img src="https://jackstrom0904.github.io/post-images/1580442967732.png" alt="" loading="lazy"><br>
选中存在漏洞的站点、点击上传<br>
<img src="https://jackstrom0904.github.io/post-images/1580443089746.png" alt="" loading="lazy"><br>
利用option方法查看服务器支持的方法.<br>
<img src="https://jackstrom0904.github.io/post-images/1580443247961.png" alt="" loading="lazy"><br>
利用put方法上传一个包含一句话的txt、然后提交数据包<br>
<img src="https://jackstrom0904.github.io/post-images/1580444016722.png" alt="" loading="lazy"><br>
利用webshell连接连接一句话</p>
<p>0x03 修复建议<br>
建议关闭不安全的http方法、仅保留POST与GET方法。</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[巡风内网应急系统]]></title>
        <id>https://jackstrom0904.github.io/r5qRundLE</id>
        <link href="https://jackstrom0904.github.io/r5qRundLE">
        </link>
        <updated>2020-01-27T05:27:20.000Z</updated>
        <content type="html"><![CDATA[<p>0x01 巡风介绍<br>
巡风是一款适用于企业内网的漏洞快速应急、巡航扫描系统，通过搜索功能可清晰的了解内部网络资产分布情况，并且可指定漏洞插件对搜索结果进行快速漏洞检测并输出结果报表<br>
0x02 巡风安装<br>
#修改时区<br>
root@bt:/opt# echo TZ='Asia/Shanghai'; export TZ &gt;&gt; ~/.bash_profile &amp;&amp; source ~/.bash_profile<br>
#操作系统依赖<br>
root@bt:/opt# apt-get update<br>
root@bt:/opt# apt-get install gcc libssl-dev libffi-dev python-dev libpcap-dev<br>
#python依赖库<br>
root@bt:/opt#wget https://sec.ly.com/mirror/get-pip.py --no-check-certificate<br>
root@bt:/opt#python get-pip.py<br>
#安装数据库<br>
导入包管理系统使用的公钥<br>
root@bt:/opt#wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -<br>
gnupg使用以下命令安装及其所需的库<br>
root@bt:/opt#sudo apt-get install gnupg<br>
安装完成后，重试导入密钥<br>
root@bt:/wget -qO - https://www.mongodb.org/static/pgp/server-4.2.asc | sudo apt-key add -<br>
Ubuntu 18.04（Bionic）创建列表文件<br>
root@bt:/echo &quot;deb [ arch=amd64 ] http://repo.mongodb.com/apt/ubuntu bionic/mongodb-enterprise/4.2 multiverse&quot; | sudo tee /etc/apt/sources.list.d/mongodb-enterprise.list<br>
重新加载本地软件包数据库<br>
root@bt:/opt#apt-get update<br>
安装MongoDB<br>
root@bt:/opt#sudo apt-get install -y mongodb-enterprise<br>
启动数据库<br>
root@bt:/opt#service mongod start<br>
mongodb添加认证<br>
root@bt:/opt# mongo</p>
<blockquote>
<p>use xunfeng<br>
db.createUser({user:'scan',pwd:'123456',roles:[{role:'dbOwner',db:'xunfeng'}]})<br>
exit<br>
下载巡风<br>
root@bt:/opt# git clone https://github.com/ysrc/xunfeng.git<br>
root@bt:/opt/xunfeng/db# pwd #进入数据库文件夹<br>
/opt/xunfeng/db<br>
root@bt:/opt/xunfeng/db# mongorestore -h 127.0.0.1 --port 27017 -d xunfeng . #导入数据库<br>
root@bt:/opt/xunfeng# pwd # 安装python相关依赖<br>
/opt/xunfeng<br>
root@bt:/opt/xunfeng# pip install -r requirements.txt<br>
修改配置文件<br>
root@bt:/opt/xunfeng# vim Config.py<br>
class Config(object):<br>
ACCOUNT = 'admin'   #后台登录用户名<br>
PASSWORD = 'xunfeng321'#后台用户密码<br>
class ProductionConfig(Config):<br>
DB = '127.0.0.1'<br>
PORT = 27017<br>
DBUSERNAME = 'scan'<br>
DBPASSWORD = '123456'<br>
DBNAME = 'xunfeng'<br>
#启动巡风<br>
root@bt:/opt/xunfeng# chmod +x *<br>
root@bt:/opt/xunfeng# ./Run.sh<br>
程序部署完成<br>
<img src="https://jackstrom0904.github.io/post-images/1580114699144.png" alt="" loading="lazy"></p>
</blockquote>
<p>注：程序基于Py2开发、此处有坑</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[渗透测试框架之TrackRay]]></title>
        <id>https://jackstrom0904.github.io/s4ReIUkoC</id>
        <link href="https://jackstrom0904.github.io/s4ReIUkoC">
        </link>
        <updated>2020-01-27T02:14:19.000Z</updated>
        <content type="html"><![CDATA[<p>0x01 TrackRay介绍<br>
溯光，英文名“TrackRay”，意为逆光而行，追溯光源。同时致敬安全圈前辈开发的“溯雪”，“流光<br>
溯光是一个开源的插件化渗透测试框架，框架自身实现了漏洞扫描功能，集成了知名安全工具：Metasploit、Nmap、Sqlmap、AWVS等。<br>
溯光使用 Java 编写，SpringBoot 作为基础框架，JPA + HSQLDB嵌入式数据库做持久化，Maven 管理依赖，Jython 实现 Python 插件调用，quartz 做任务调度，freemarker 做视图层，Websocket 实现命令行式插件交互。框架可扩展性高，支持 Java、Python、JSON 等方式编写插件，有“漏洞扫描插件”、“爬虫插件”、“独立应用插件”、“内部插件”、“无交互插件”和“可交互插件” 等插件类型。<br>
项目地址：https://github.com/iSafeBlue/TrackRay<br>
0x02 TrackRay依赖环境<br>
JDK 1.8<br>
Python 2.7<br>
Maven<br>
Git<br>
Metasploit<br>
Nmap(建议安装)<br>
SQLMAP(建议安装)<br>
AWVS<br>
说明：由于个人环境已部署了部分环境、故此无法记录所有的安装过程<br>
<strong>root@bt:/# java -version</strong> #已安装<br>
openjdk version &quot;1.8.0_232&quot;<br>
OpenJDK Runtime Environment (build 1.8.0_232-8u232-b09-0ubuntu1~18.04.1-b09)<br>
OpenJDK 64-Bit Server VM (build 25.232-b09, mixed mode)<br>
**root@bt:/# python2.7 **#已安装<br>
Python 2.7.17 (default, Nov  7 2019, 10:07:09)<br>
root@bt:/# git #已安装<br>
usage: git [--version] [--help] [-C <path>] [-c <name>=<value>]<br>
[--exec-path[=<path>]] [--html-path] [--man-path] [--info-path]<br>
[-p | --paginate | --no-pager] [--no-replace-objects] [--bare]<br>
[--git-dir=<path>] [--work-tree=<path>] [--namespace=<name>]<br>
<command> [<args>]<br>
**root@bt:/# nmap **#已安装<br>
Nmap 7.60 ( https://nmap.org )<br>
Usage: nmap [Scan Type(s)] [Options] {target specification}<br>
TARGET SPECIFICATION:<br>
**root@bt:/# msfconsole ** #msf已安装<br>
[-] ***rting the Metasploit Framework console...<br>
[-] * WARNING: No database support: No database YAML file<br>
[-] ***<br>
####sqlmap安装####<br>
root@bt:/opt# git clone --depth 1 https://github.com/sqlmapproject/sqlmap.git sqlmap-dev #安装sqlmap<br>
root@bt:/opt# cd sqlmap-dev/ #进入sql目录<br>
root@bt:/opt/sqlmap-dev# pwd #获取路径信息<br>
/opt/sqlmap-dev<br>
root@bt:/opt/sqlmap-dev# vim /etc/profile #将SQLMAP路径加入到环境变量<br>
export PATH=/opt/sqlmap-dev:$PATH<br>
root@bt:/opt/sqlmap-dev# python sqlmap.py  #部署完成<br>
sqlmap.py: error: missing a mandatory option (-d, -u, -l, -m, -r, -g, -c, --list-tampers, --wizard, --update, --purge or --dependencies). Use -h for basic and -hh for advanced help<br>
#####AWVS安装#####<br>
root@bt:/# apt-get install libxdamage1 libgtk-3-0 libasound2 libnss3 libxss1 libx11-xcb-dev -y #安装依赖<br>
root@bt:/opt/wvs# ./acunetix_trial.sh #安装官方程序 按照信息输入即可<br>
root@bt:/opt/wvs# cp patch_awvs /home/acunetix/.acunetix_trial/v_190927120/scanner/ #将破解补丁拷贝到安装目录</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[开源蜜罐之HFish部署]]></title>
        <id>https://jackstrom0904.github.io/5J3Cs3gZQ</id>
        <link href="https://jackstrom0904.github.io/5J3Cs3gZQ">
        </link>
        <updated>2020-01-27T01:37:32.000Z</updated>
        <content type="html"><![CDATA[<p>0x01 蜜罐介绍<br>
蜜罐技术本质上是一种对攻击方进行欺骗的技术，通过布置一些作为诱饵的主机、网络服务或者信息，诱使攻击方对它们实施攻击，从而可以对攻击行为进行捕获和分析，了解攻击方所使用的工具与方法，推测攻击意图和动机，能够让防御方清晰地了解他们所面对的安全威胁，并通过技术和管理手段来增强实际系统的安全防护能力。<br>
0x02 蜜罐部署<br>
安装过程<br>
https://github.com/hacklcx/HFish/releases #下载对应的安装包<br>
<img src="https://jackstrom0904.github.io/post-images/1580089301747.png" alt="" loading="lazy"><br>
上述图片作者基于各个版本封装的安装包<br>
root@bt:/# wget https://github.com/hacklcx/HFish/releases/download/0.5/HFish-0.5-linux-amd64.tar.gz #使用wget下载安装包<br>
<img src="https://jackstrom0904.github.io/post-images/1580089472470.png" alt="" loading="lazy"><br>
root@bt:/# tar zxvf HFish-0.5-linux-amd64.tar.gz #解压文件<br>
root@bt:/# cd HFish-0.5-linux-amd64 #进入目录<br>
root@bt:/HFish-0.5-linux-amd64# ls -l   # 目录说明<br>
总用量 18236<br>
drwxr-xr-x 2 root root     4096 12月  3 21:11 admin<br>
-rw-r--r-- 1 root root     5236 11月 28 21:35 config.ini #核心配置文件<br>
drwxr-xr-x 3 root root     4096 12月  3 21:11 db<br>
-rwxr-xr-x 1 root root 18590216 12月  3 20:32 HFish #启动文件<br>
drwxr-xr-x 2 root root     4096 12月  3 21:11 images<br>
drwxr-xr-x 4 root root     4096 12月  3 21:11 libs<br>
-rw-r--r-- 1 root root    35148 9月   8 23:43 LICENSE<br>
drwxr-xr-x 2 root root     4096 12月  2 17:22 logs<br>
-rw-r--r-- 1 root root     5812 12月  3 20:58 README.md<br>
drwxr-xr-x 8 root root     4096 12月  3 21:11 static<br>
drwxr-xr-x 4 root root     4096 8月  10 17:37 web<br>
root@bt:/HFish-0.5-linux-amd64# ./HFish #启动程序默认管理端口为9001<br>
<img src="https://jackstrom0904.github.io/post-images/1580089788509.png" alt="" loading="lazy"><br>
0x03 访问HFISH<br>
http://192.168.188.134:9001/login  #IP地址为安装机器的地址<br>
<img src="https://jackstrom0904.github.io/post-images/1580090009141.png" alt="" loading="lazy"><br>
默认登录用户名与密码为admin&amp;&amp;admin<br>
配置文件可进行修改<br>
<img src="https://jackstrom0904.github.io/post-images/1580090097723.png" alt="" loading="lazy"></p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[渗透测试之Nmap]]></title>
        <id>https://jackstrom0904.github.io/Wm37OF_ZL</id>
        <link href="https://jackstrom0904.github.io/Wm37OF_ZL">
        </link>
        <updated>2020-01-25T09:03:45.000Z</updated>
        <content type="html"><![CDATA[<p>2</p>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[渗透测试之基础信息收集]]></title>
        <id>https://jackstrom0904.github.io/axcjIUufJ</id>
        <link href="https://jackstrom0904.github.io/axcjIUufJ">
        </link>
        <updated>2020-01-25T09:02:01.000Z</updated>
        <content type="html"><![CDATA[<ol>
<li></li>
</ol>
]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[渗透测试工具之Sqlmap]]></title>
        <id>https://jackstrom0904.github.io/SNQOq63GI</id>
        <link href="https://jackstrom0904.github.io/SNQOq63GI">
        </link>
        <updated>2020-01-25T08:57:45.000Z</updated>
        <summary type="html"><![CDATA[<p>1.工具介绍</p>
]]></summary>
        <content type="html"><![CDATA[<p>1.工具介绍</p>
<!-- more -->
<!-- more -->
<p>2.参数介绍</p>
<!-- more -->
<!-- more -->
<p>3.Access注入</p>
<!-- more -->
<!-- more -->
<p>4.Sqlserver注入</p>
<!-- more -->
<!-- more -->
<p>5.MySQL注入</p>
<!-- more -->
<!-- more -->
]]></content>
    </entry>
</feed>